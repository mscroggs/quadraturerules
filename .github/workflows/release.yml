name: Make new releases

on:
  push:
    branches: [main]

jobs:
  check-version:
    name: Make tag if version number has increased
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.release.output.release }}
    permissions:
      id-token: write
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install PyGitHub
      run: python3 -m pip install PyGitHub
    - name: Check version number and make release if necessary
      run: python .github/scripts/version.py ${{ secrets.GITHUB_TOKEN }} >> $GITHUB_OUTPUT
      id: release

  python-library:
    name: Release Python library
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
    needs:
      - check-version
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: actions/checkout@v3

      - run: |
          python3 -m pip install -r website/requirements.txt
          python3 -m pip install -r library/requirements.txt
        name: Install requirements

      - run: |
          cd library
          python build.py python
        name: Build Python library
      - run: |
          cd library/python.build
          python3 -m pip install build
          python3 -m build .
        name: Build Python wheels

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: library/python.build/dist
        if: needs.check-version.outputs.release == 'yes'

  rust-library:
    name: Release Rust library
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
    needs:
      - check-version
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: actions/checkout@v3

      - run: |
          python3 -m pip install -r website/requirements.txt
          python3 -m pip install -r library/requirements.txt
        name: Install requirements

      - run: |
          cd library
          python build.py rust
        name: Build Rust library
      - uses: katyo/publish-crates@v2
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          path: './library/rust.build'
        if: needs.check-version.outputs.release == 'yes'
