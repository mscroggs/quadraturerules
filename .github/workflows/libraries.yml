name: Test and build libraries

on:
  push:
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 7 * * 1"

jobs:
  python-library:
    name: Build and test Python library
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/checkout@v3

      - run: |
          python3 -m pip install -r website/requirements.txt
          python3 -m pip install -r library/requirements.txt
        name: Install requirements

      - run: |
          cd library
          python build.py python
          cd python.build
          python3 -m pip install -e .[ci]
        name: Build and install Python library
      - run: |
          cd library/python.build
          python3 -m ruff check .
          python3 -m ruff format --check .
        name: Ruff checks
      - run: |
          cd library/python.build
          python3 -m mypy .
        name: mypy checks

      - run: |
          cd library/python.build
          python3 -m pytest test
        name: Run Python tests

  rust-library:
    name: Build and test Rust library
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        rust-version: ["stable"]
        feature-flags: ['--features "strict"', '', '--features "serde,strict"']
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust-version }}
      - uses: actions/checkout@v3

      - run: |
          python3 -m pip install -r website/requirements.txt
          python3 -m pip install -r library/requirements.txt
        name: Install requirements

      - run: |
          cd library
          python build.py rust
          cd rust.build
          cargo build
        name: Build Rust library
      - run: |
          cd library/rust.build
          cargo fmt -- --check
        name: Style checks

      - run: |
          cd library/rust.build
          cargo test ${{ matrix.feature-flags }}
        name: Run Rust tests
